#ifndef CaptureBMP_h
#define CaptureBMP_h

// Reference
//
// BITMAPFILEHEADER: 14 bytes
// typedef struct tagBITMAPFILEHEADER {
//   WORD  bfType;
//   DWORD bfSize;
//   WORD  bfReserved1;
//   WORD  bfReserved2;
//   DWORD bfOffBits;
// }
//
// BITMAPINFOHEADER: 40 bytes
// typedef struct tagBITMAPINFOHEADER {
//   DWORD biSize;
//   LONG  biWidth;
//   LONG  biHeight;
//   WORD  biPlanes;
//   WORD  biBitCount;
//   DWORD biCompression;
//   DWORD biSizeImage;
//   LONG  biXPelsPerMeter;
//   LONG  biYPelsPerMeter;
//   DWORD biClrUsed;
//   DWORD biClrImportant;
// }

// custom header for 8 bit indexed BMP with adapted palette
// which requires no translation between framebuffer values and indices
#define BMP_HEADER1_SIZE 18
#define BMP_HEADER2_SIZE 20
#define BMP_HEADER3_SIZE 1040

const unsigned char bmp_header1[BMP_HEADER1_SIZE] = {
    0x42,0x4d,0x36,0x14,0x00,0x00,0x00,0x00,0x00,0x00,0x36,0x04,0x00,0x00,0x28,0x00,
    0x00,0x00 };

const unsigned char bmp_header3[BMP_HEADER3_SIZE] = { 
    0x23,0x2e,0x00,0x00,0x23,0x2e,0x00,0x00,0x00,0x01,
    0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7f,0x00,0x00,0x00,
    0xbf,0x00,0x00,0x00,0xff,0x00,0x00,0x7f,0x00,0x00,0x00,0x7f,0x7f,0x00,0x00,0x7f,
    0xbf,0x00,0x00,0x7f,0xff,0x00,0x00,0xbf,0x00,0x00,0x00,0xbf,0x7f,0x00,0x00,0xbf,
    0xbf,0x00,0x00,0xbf,0xff,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0x7f,0x00,0x00,0xff,
    0xbf,0x00,0x00,0xff,0xff,0x00,0x7f,0x00,0x00,0x00,0x7f,0x00,0x7f,0x00,0x7f,0x00,
    0xbf,0x00,0x7f,0x00,0xff,0x00,0x7f,0x7f,0x00,0x00,0x7f,0x7f,0x7f,0x00,0x7f,0x7f,
    0xbf,0x00,0x7f,0x7f,0xff,0x00,0x7f,0xbf,0x00,0x00,0x7f,0xbf,0x7f,0x00,0x7f,0xbf,
    0xbf,0x00,0x7f,0xbf,0xff,0x00,0x7f,0xff,0x00,0x00,0x7f,0xff,0x7f,0x00,0x7f,0xff,
    0xbf,0x00,0x7f,0xff,0xff,0x00,0xbf,0x00,0x00,0x00,0xbf,0x00,0x7f,0x00,0xbf,0x00,
    0xbf,0x00,0xbf,0x00,0xff,0x00,0xbf,0x7f,0x00,0x00,0xbf,0x7f,0x7f,0x00,0xbf,0x7f,
    0xbf,0x00,0xbf,0x7f,0xff,0x00,0xbf,0xbf,0x00,0x00,0xbf,0xbf,0x7f,0x00,0xbf,0xbf,
    0xbf,0x00,0xbf,0xbf,0xff,0x00,0xbf,0xff,0x00,0x00,0xbf,0xff,0x7f,0x00,0xbf,0xff,
    0xbf,0x00,0xbf,0xff,0xff,0x00,0xff,0x00,0x00,0x00,0xff,0x00,0x7f,0x00,0xff,0x00,
    0xbf,0x00,0xff,0x00,0xff,0x00,0xff,0x7f,0x00,0x00,0xff,0x7f,0x7f,0x00,0xff,0x7f,
    0xbf,0x00,0xff,0x7f,0xff,0x00,0xff,0xbf,0x00,0x00,0xff,0xbf,0x7f,0x00,0xff,0xbf,
    0xbf,0x00,0xff,0xbf,0xff,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0x7f,0x00,0xff,0xff,
    0xbf,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7f,0x00,0x00,0x00,
    0xbf,0x00,0x00,0x00,0xff,0x00,0x00,0x7f,0x00,0x00,0x00,0x7f,0x7f,0x00,0x00,0x7f,
    0xbf,0x00,0x00,0x7f,0xff,0x00,0x00,0xbf,0x00,0x00,0x00,0xbf,0x7f,0x00,0x00,0xbf,
    0xbf,0x00,0x00,0xbf,0xff,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0x7f,0x00,0x00,0xff,
    0xbf,0x00,0x00,0xff,0xff,0x00,0x7f,0x00,0x00,0x00,0x7f,0x00,0x7f,0x00,0x7f,0x00,
    0xbf,0x00,0x7f,0x00,0xff,0x00,0x7f,0x7f,0x00,0x00,0x7f,0x7f,0x7f,0x00,0x7f,0x7f,
    0xbf,0x00,0x7f,0x7f,0xff,0x00,0x7f,0xbf,0x00,0x00,0x7f,0xbf,0x7f,0x00,0x7f,0xbf,
    0xbf,0x00,0x7f,0xbf,0xff,0x00,0x7f,0xff,0x00,0x00,0x7f,0xff,0x7f,0x00,0x7f,0xff,
    0xbf,0x00,0x7f,0xff,0xff,0x00,0xbf,0x00,0x00,0x00,0xbf,0x00,0x7f,0x00,0xbf,0x00,
    0xbf,0x00,0xbf,0x00,0xff,0x00,0xbf,0x7f,0x00,0x00,0xbf,0x7f,0x7f,0x00,0xbf,0x7f,
    0xbf,0x00,0xbf,0x7f,0xff,0x00,0xbf,0xbf,0x00,0x00,0xbf,0xbf,0x7f,0x00,0xbf,0xbf,
    0xbf,0x00,0xbf,0xbf,0xff,0x00,0xbf,0xff,0x00,0x00,0xbf,0xff,0x7f,0x00,0xbf,0xff,
    0xbf,0x00,0xbf,0xff,0xff,0x00,0xff,0x00,0x00,0x00,0xff,0x00,0x7f,0x00,0xff,0x00,
    0xbf,0x00,0xff,0x00,0xff,0x00,0xff,0x7f,0x00,0x00,0xff,0x7f,0x7f,0x00,0xff,0x7f,
    0xbf,0x00,0xff,0x7f,0xff,0x00,0xff,0xbf,0x00,0x00,0xff,0xbf,0x7f,0x00,0xff,0xbf,
    0xbf,0x00,0xff,0xbf,0xff,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0x7f,0x00,0xff,0xff,
    0xbf,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7f,0x00,0x00,0x00,
    0xbf,0x00,0x00,0x00,0xff,0x00,0x00,0x7f,0x00,0x00,0x00,0x7f,0x7f,0x00,0x00,0x7f,
    0xbf,0x00,0x00,0x7f,0xff,0x00,0x00,0xbf,0x00,0x00,0x00,0xbf,0x7f,0x00,0x00,0xbf,
    0xbf,0x00,0x00,0xbf,0xff,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0x7f,0x00,0x00,0xff,
    0xbf,0x00,0x00,0xff,0xff,0x00,0x7f,0x00,0x00,0x00,0x7f,0x00,0x7f,0x00,0x7f,0x00,
    0xbf,0x00,0x7f,0x00,0xff,0x00,0x7f,0x7f,0x00,0x00,0x7f,0x7f,0x7f,0x00,0x7f,0x7f,
    0xbf,0x00,0x7f,0x7f,0xff,0x00,0x7f,0xbf,0x00,0x00,0x7f,0xbf,0x7f,0x00,0x7f,0xbf,
    0xbf,0x00,0x7f,0xbf,0xff,0x00,0x7f,0xff,0x00,0x00,0x7f,0xff,0x7f,0x00,0x7f,0xff,
    0xbf,0x00,0x7f,0xff,0xff,0x00,0xbf,0x00,0x00,0x00,0xbf,0x00,0x7f,0x00,0xbf,0x00,
    0xbf,0x00,0xbf,0x00,0xff,0x00,0xbf,0x7f,0x00,0x00,0xbf,0x7f,0x7f,0x00,0xbf,0x7f,
    0xbf,0x00,0xbf,0x7f,0xff,0x00,0xbf,0xbf,0x00,0x00,0xbf,0xbf,0x7f,0x00,0xbf,0xbf,
    0xbf,0x00,0xbf,0xbf,0xff,0x00,0xbf,0xff,0x00,0x00,0xbf,0xff,0x7f,0x00,0xbf,0xff,
    0xbf,0x00,0xbf,0xff,0xff,0x00,0xff,0x00,0x00,0x00,0xff,0x00,0x7f,0x00,0xff,0x00,
    0xbf,0x00,0xff,0x00,0xff,0x00,0xff,0x7f,0x00,0x00,0xff,0x7f,0x7f,0x00,0xff,0x7f,
    0xbf,0x00,0xff,0x7f,0xff,0x00,0xff,0xbf,0x00,0x00,0xff,0xbf,0x7f,0x00,0xff,0xbf,
    0xbf,0x00,0xff,0xbf,0xff,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0x7f,0x00,0xff,0xff,
    0xbf,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7f,0x00,0x00,0x00,
    0xbf,0x00,0x00,0x00,0xff,0x00,0x00,0x7f,0x00,0x00,0x00,0x7f,0x7f,0x00,0x00,0x7f,
    0xbf,0x00,0x00,0x7f,0xff,0x00,0x00,0xbf,0x00,0x00,0x00,0xbf,0x7f,0x00,0x00,0xbf,
    0xbf,0x00,0x00,0xbf,0xff,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0x7f,0x00,0x00,0xff,
    0xbf,0x00,0x00,0xff,0xff,0x00,0x7f,0x00,0x00,0x00,0x7f,0x00,0x7f,0x00,0x7f,0x00,
    0xbf,0x00,0x7f,0x00,0xff,0x00,0x7f,0x7f,0x00,0x00,0x7f,0x7f,0x7f,0x00,0x7f,0x7f,
    0xbf,0x00,0x7f,0x7f,0xff,0x00,0x7f,0xbf,0x00,0x00,0x7f,0xbf,0x7f,0x00,0x7f,0xbf,
    0xbf,0x00,0x7f,0xbf,0xff,0x00,0x7f,0xff,0x00,0x00,0x7f,0xff,0x7f,0x00,0x7f,0xff,
    0xbf,0x00,0x7f,0xff,0xff,0x00,0xbf,0x00,0x00,0x00,0xbf,0x00,0x7f,0x00,0xbf,0x00,
    0xbf,0x00,0xbf,0x00,0xff,0x00,0xbf,0x7f,0x00,0x00,0xbf,0x7f,0x7f,0x00,0xbf,0x7f,
    0xbf,0x00,0xbf,0x7f,0xff,0x00,0xbf,0xbf,0x00,0x00,0xbf,0xbf,0x7f,0x00,0xbf,0xbf,
    0xbf,0x00,0xbf,0xbf,0xff,0x00,0xbf,0xff,0x00,0x00,0xbf,0xff,0x7f,0x00,0xbf,0xff,
    0xbf,0x00,0xbf,0xff,0xff,0x00,0xff,0x00,0x00,0x00,0xff,0x00,0x7f,0x00,0xff,0x00,
    0xbf,0x00,0xff,0x00,0xff,0x00,0xff,0x7f,0x00,0x00,0xff,0x7f,0x7f,0x00,0xff,0x7f,
    0xbf,0x00,0xff,0x7f,0xff,0x00,0xff,0xbf,0x00,0x00,0xff,0xbf,0x7f,0x00,0xff,0xbf,
    0xbf,0x00,0xff,0xbf,0xff,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0x7f,0x00,0xff,0xff,
    0xbf,0x00,0xff,0xff,0xff,0x00
};

void CaptureToBmp();

#endif